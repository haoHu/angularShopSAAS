/*! angular-lazyload - v0.4.0 - https://github.com/atian25/angular-lazyload - 2013-10-28 */
!function(){"use strict";function a(a,c,d){b(a),this.register=d,this.init=function(b,e){var f=angular.isObject(e)?e:this.loaders[e]||this.loaders.seajs;a.$on("$routeChangeStart",function(e,g){var h=g&&g.$$route;h&&(!angular.isFunction(f.check)||f.check(h))&&(h.resolve=h.resolve||{},h.resolve.loadedModule=function(){var e=c.defer();return f.load(h,function(c){a.safeApply(function(){e.resolve(angular.isFunction(c)?c(b,d):c)})},function(b){a.safeApply(function(){e.reject(b)})}),e.promise})})}}function b(a){a.safeApply=function(a){var b=this.$root.$$phase;"$apply"==b||"$digest"==b?a&&"function"==typeof a&&a():this.$apply(a)}}angular.module("angular-lazyload",[],["$controllerProvider","$compileProvider","$filterProvider","$provide",function(b,c,d,e){e.factory("$lazyload",["$rootScope","$q",function(f,g){var h={controller:b.register,directive:c.directive,filter:d.register,factory:e.factory,service:e.service,decorator:e.decorator};return new a(f,g,h)}])}]),a.prototype.loaders={},a.prototype.loaders.seajs={check:function(a){return"string"==typeof a.controllerUrl},load:function(a,b,c){seajs.use(a.controllerUrl,function(a){angular.isUndefined(a)?c(a):b(a)})}},a.prototype.loaders.requirejs={check:function(a){return"string"==typeof a.controllerUrl},load:function(a,b,c){require(a.controllerUrl,function(a){angular.isUndefined(a)?c(a):b(a)})}}}(this);